package com.lorenzi.logistic.api.controller;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.lorenzi.logistic.domain.model.Client;
import com.lorenzi.logistic.domain.repository.ClientRepository;




@RestController
public class ClientController {
	
	@Autowired
	private ClientRepository clientRepository;
	
	

	@GetMapping("/clients")
	public List<Client> list() {
	
		return clientRepository.findAll();
	}
	
	@GetMapping("/clients/{clientId}")
	public ResponseEntity<Client> clientById(@PathVariable Long clientId) {
		
		return clientRepository.findById(clientId)
				.map(client -> ResponseEntity.ok(client))
				.orElse(ResponseEntity.notFound().build());
		
	//	Optional<Client> client = clientRepository.findById(clientId);
		
	//	if (client.isPresent()) {
	//		return ResponseEntity.ok(client.get());
		}
	//	return ResponseEntity.notFound().build();
		
	}
	

}
